{"version":3,"file":"static/js/913.5b40fd9e.chunk.js","mappings":"wLAIA,MA+BA,EA/BaA,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACpBE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKH,EAAKK,SACVD,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAKM,WACRN,EAAKO,MAAMC,OAAS,IACnBJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SACzBH,EAAKO,MAAME,KAAKC,IACfN,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,KAAGU,KAAMD,EAAKE,IAAKC,OAAO,SAASC,IAAI,sBAAqBX,SAAA,CACzDO,EAAKK,MAAM,KAACX,EAAAA,EAAAA,KAACY,EAAAA,IAAQ,QAFjBN,EAAKK,aAQhB,ECiBR,EApCa,CACX,CACEV,MAAO,YACPC,SAAU,2CACVC,MAAO,CACL,CACEQ,MAAO,SACPH,IAAK,OAIX,CACEP,MAAO,eACPC,SAAU,sDACVC,MAAO,CACL,CACEQ,MAAO,UACPH,IAAK,KAEP,CACEG,MAAO,QACPH,IAAK,KAEP,CACEG,MAAO,gBACPH,IAAK,OAIX,CACEP,MAAO,eACPC,SAAU,wDACVC,MAAO,KCPX,EAlBaU,KACXb,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACb,MAAM,OAAOc,YAAY,4DAAsDhB,UACnFF,EAAAA,EAAAA,MAAA,WAASC,UAAU,OAAOkB,GAAG,OAAMjB,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,QAAOnB,SAAC,YAEnBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4EAGNH,EAAKS,KAAKc,IACTnB,EAAAA,EAAAA,KAACoB,EAAI,CAACxB,KAAMuB,GAAcA,EAAQlB,a","sources":["components/Code/Cell.js","data/code.js","pages/Code.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaGithub } from 'react-icons/fa';\n\nconst Cell = ({ data }) => (\n  <div className=\"project-cell\">\n    <h3>{data.title}</h3>\n    <p>{data.subtitle}</p>\n    {data.links.length > 0 && (\n      <ul className=\"subitem-list\">\n        {data.links.map((link) => (\n          <li key={link.label}>\n            <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {link.label} <FaGithub />\n            </a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string,\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string,\n        url: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n};\n\nexport default Cell;\n","const data = [\n  {\n    title: 'PyMatcher',\n    subtitle: 'A package for string matching in Python.',\n    links: [\n      {\n        label: 'py-str',\n        url: '#',\n      },\n    ],\n  },\n  {\n    title: 'SparkMatcher',\n    subtitle: 'Packages for Entity Matching using a Spark Cluster.',\n    links: [\n      {\n        label: 'Sparkly',\n        url: '#',\n      },\n      {\n        label: 'Delex',\n        url: '#',\n      },\n      {\n        label: 'ActiveMatcher',\n        url: '#',\n      },\n    ],\n  },\n  {\n    title: 'CloudMatcher',\n    subtitle: 'Cloud-based entity matching. Acquired by Informatica.',\n    links: [],\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Main from '../layouts/Main';\n\nimport Cell from '../components/Code/Cell';\nimport data from '../data/code';\n\nconst Code = () => (\n  <Main title=\"Code\" description=\"Explore MagellanTechâ€™s matching libraries and tools.\">\n    <article className=\"post\" id=\"code\">\n      <header>\n        <div className=\"title\">\n          <h2>\n            <Link to=\"/code\">Code</Link>\n          </h2>\n          <p>A collection of our open-source entity matching tools and systems.</p>\n        </div>\n      </header>\n      {data.map((project) => (\n        <Cell data={project} key={project.title} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Code;\n"],"names":["_ref","data","_jsxs","className","children","_jsx","title","subtitle","links","length","map","link","href","url","target","rel","label","FaGithub","Code","Main","description","id","Link","to","project","Cell"],"sourceRoot":""}