"use strict";(self.webpackChunkmagellan_site=self.webpackChunkmagellan_site||[]).push([[938],{938:(e,s,a)=>{a.r(s),a.d(s,{default:()=>h});a(43);var n=a(475),l=a(181),t=a(579);const h=()=>(0,t.jsx)(l.A,{title:"Research",description:"The research projects under MagellanTech's umbrella.",children:(0,t.jsxs)("article",{className:"post",id:"research",children:[(0,t.jsx)("header",{children:(0,t.jsx)("div",{className:"title",children:(0,t.jsx)("h2",{children:(0,t.jsx)(n.N_,{to:"/research",children:"Research"})})})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h3",{children:"Research"}),(0,t.jsx)("p",{children:"In this page we describe the research projects that fall under the Magellan umbrella. (If you have worked on one of these projects yet do not see your name listed here, please accept our apologies and send us an email.)"})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h3",{children:"PyMatcher (2015 - Date)"}),(0,t.jsx)("p",{children:"This project develops an EM platform using Python packages on a single machine (e.g., pandas, sklearn). PyMatcher is intended for matching tables of small to medium size (e.g., up to a few million tuples per table). It includes tools to take samples from the tables, using the samples to find an accurate EM pipeline, then apply that pipeline to match the original tables."})]}),(0,t.jsx)("section",{children:(0,t.jsx)("h3",{children:"SparkMatcher"})}),(0,t.jsx)("section",{children:(0,t.jsx)("h3",{children:"CloudMatcher"})}),(0,t.jsx)("section",{children:(0,t.jsx)("h3",{children:"Corleone and Falcone"})}),(0,t.jsx)("section",{children:(0,t.jsx)("h3",{children:"Deep Learning"})}),(0,t.jsx)("section",{children:(0,t.jsx)("h3",{children:"String Matching, Schema Matching, Ontology Matching, and Others"})})]})})}}]);
//# sourceMappingURL=938.f02aa33c.chunk.js.map